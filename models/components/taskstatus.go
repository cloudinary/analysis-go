// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// TaskStatus - The status of an async task
type TaskStatus string

const (
	TaskStatusPending    TaskStatus = "pending"
	TaskStatusProcessing TaskStatus = "processing"
	TaskStatusCompleted  TaskStatus = "completed"
	TaskStatusFailed     TaskStatus = "failed"
)

func (e TaskStatus) ToPointer() *TaskStatus {
	return &e
}
func (e *TaskStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "processing":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = TaskStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskStatus: %v", v)
	}
}
